! Geometry	0
geometry	    =	    1 		    ! 0-box, 1-sph. annulus, 2-cylinder
dim		        =	    2 		    ! 2-2D, 3-3D
nl		        =	    1    	  	! number of grid points in lateral direction (2 ghost points are added when reflective boundary is used)
ny		        =	    0
nr		        =	    1  		    ! number of grid points in radial direction (+2 ghost points)
resolution	    =	    50000
lmin		    =	    0.0		    ! only used when geometry=0
lmax		    =	    0.0		    ! only used when geometry=0
ymin		    =	    0.0
ymax		    =	    0.0
rmin		    =	    1000        ! not used 
rmax		    =	    2000        ! not used		! rmax=rmin+1.0
phi_factor	    =	    0.25 		! only used when geometry>0, 1.0: full annulus, 0.5: half annulus, ... 
CorrRot		    =	    0     


! General       0
UseSecondInput  =       0           ! Just for output in all_results_CHIC.txt


! Adaptivity    0
ad_factor       =       0		    ! 0-uniform box grid, 1-refine area (ad_min/ad_max values needed), 2-smallest/largest resolution (res_min/res_max) is set at (ad_l=0.5*lmax, ad_r=rmax)
res_ratio_l     =       0.1 
res_ratio_y	    =	    0.1
res_ratio_r     =       0.1 


! Bnd_cond	0
Ttop		    =	    300.0		! temperature at surface, until now: has to be 0 or dimensional value (e.g. 288 for Earth)
Tbottom		    =	    6000.0		! temperature at CMB, until now: has to be 1 or dimensional value (e.g. 3900 for Earth)
noslip_t	    =	    0		    ! 0: free-slip, 1: no-slip at surface boundary
noslip_b	    =	    0		    ! 0: free-slip, 1: no-slip at CMB boundary
inner_bound	    =	    0		    ! 1: isolated
outer_bound	    =	    0		    ! 1: isolated
open_b_bound	=	    0		    ! 1: open boundary at bottom
periodic	    =	    0   		! 0: reflective boundary, 1: periodic boundary, is currently tested, normally: 0 for box and 1 for sphere


! Restart_TS 	0
use_snap	    =	    0		    ! insert number of TS from the snapshot, from which the simulation shall re-start
last_snap	    =	    0		    ! set to 1, then the last snapshot is automatically used (use_snap is ignored)
Cdt		        =	    1  		    ! Courant factor when positive value (e.g. 0.1), Delta criterium factor when negative (e.g. -10.0), dt_ini if 0
dt_ini		    =	    1.0e+3		! Initial time step or fixed time step if CourantCoeff=0
dt_max		    =	    1e+6		! Maximal time step
dt_min		    =	    1.0e+1		! Minimal time step
nbiter		    =	    0		    ! max number of time steps, not used if tmax>0
iter_out	    =	    0 		    ! output every ... time steps
tmax		    =	    5e+9 		! maximal time, stop the simulation when reached; if tmax=0 then either nbiter or conv is used to stop the simulation
t_output	    =	    1e+8		! output time
binary		    =	    1


! Initial 	0
ampl		    =	    0.005 		! amplitude of initially applied sphercial harmonics
sph_l		    =	    0 		    ! mode of spherical harmonics, chose +/-1.0 times the aspect ratio for box geometry and number of preferred plumes for polar geometry
sph_y		    =	    0
linear		    =	    7 		    ! initial temperature profile: 0: T=Tini everywhere; 1: linear, 2: conductive profile, 3: convective profile with TBLs
Tini		    =	    20	        ! read-in initial profile, use small value to see if it really works	! initial mantle temperature 
s_bot		    =	    10	        ! not used	! lower thermal boundary layer (TBL) for profile 3
s_top		    =	    10	        ! not used	! upper thermal boundary layer (TBL) for profile 3
isotherm        =       1800


! Viscosity     0
n_fac           =       -1 !3.5     ! Arrhenius AND FK: non-Newtonian factor (1.0 - Newtonian, >1.0 non-Newtonian)
p_fac		    =	    2.5 !0
iniStrRate      =       0.0         ! 10^-15 1/s ! Initial Strain rate
StartNN         =       0           ! Number of timesteps after which non-Newtonian law is applied
Tref            =       0		    ! reference temperature for Rayleigh number
pref            =       0		    ! reference pressure in GPa for Rayleigh number
e_gamT          =       0           ! FK Viscosity: exp(gamma_T)
e_gamP          =       0           ! FK Viscosity: exp(gamma_p)
rheol_vec	    =	    -3		    ! take pv/ppv diffusion rheology from Tackley et al., 2013
E               =       300000.0    ! Arrhenius: actvation energy
V               =       5 		    ! Arrhenius: activation volume
E_dis           =       0  		    ! Arrhenius, non-Newtonian: activation energy
V_dis           =       0 		    ! Arrhenius, non-Newtonian: activation volume
A_dif           =       6.08e-19 	! Arrhenius, mixed Newtonian: prefactor Newtonian
A_dis           =       0 		    ! Arrhenius, mixed Newtonian: prefactor non-Newtonian: A' = A * eta_ref^n * (kappa/D^2)^(n-1)
T0              =       300.0       ! Arrhenius: surface temperature (Tsurf/DeltaT)
AdVisc          =       0           ! adapt viscosity at boundaries, such that viscosity at ri/ro is correct
DeltaVisc	    =	    1
DeltaVisc_LM	=	    0.01		! re-scale Tackley's lower mantle viscosity (in 2013 paper an artifical factor of 100 was multiplied to viscosity law)
ViscMin         =       1.0e+19
ViscMax         =       1.0e+30


! Plasticity    0
plasticity      =       0           ! 0-Bingham, 1-nonsmooth, 2-angle-dependent
YieldStr0       =       0.0         ! plasticity = 0/1: surface yield stress (YS_0); plasticity = 2: surface cohesion
YieldStrZ       =       0           ! plasticity = 0/1: increase of yield stress with depth (YS_z*z); plasticity = 2: non-dim. factor for pressure-dependent part
friction        =       0.0		    ! non-dim factor: rho*g*D^3 / kappa / eta
mantle_fr_angl	=	    0		    ! plasticity = 2: friction angle in degrees
mantle_fr_coh	=	    0.0		    ! plasticity = 2: surface cohesion, 350 MPa


! Compress	0
Di		        =	    1 
DiT		        =	    1 
TinclTref	    =	    1
Compressible	=	    1		    ! 0=BA/EBA, 1=TALA, 2=ALA
Compr_Gr	    =	    1.0
output_compr	=	    0
read_profs	    =	    6	
ReadNondimValues =	    1		


! Continents	0
cont_nr		    =	    0
crust_ini       =       0		    ! initial basaltic crust in m
LHB_time        =       0		    ! Gyr after accretion end -> here 3.9 Gyr old
Dreg		    =	    0


! Melt          0
use_melt        =       1
LatHeat         =       600000.0	! use either LatH or Entropy; LatH = Entropy(=300)*DeltaT
use_lat_heat    =       5
update_solidus  =       1
Dxi             =       0.002
Crust_Lambda    =       1
melt1s_0        =       1409.15
melt1s_1        =       134.2
melt1s_2        =       -6.581
melt1s_3        =       0.1054
melt1l_0        =       2035.15
melt1l_1        =       57.46
melt1l_2        =       -3.487
melt1l_3        =       0.0769
melt_depth      =       12.0		! in GPa
melt_z_change   =       10.0		! in GPa
melt2s_0	    =	    1835	
melt2s_1	    =	    36.918	
melt2s_2	    =	    -0.065444	
melt2s_3	    =	    0.000076686	
melt2s_4	    =	    -3.09272E-08	
melt2l_0	    =	    1980	
melt2l_1	    =	    36.918
melt2l_2	    =	    -0.065444
melt2l_3	    =	    0.000076686
melt2l_4	    =	    -3.09272E-08
max_depl        =       0.3
dV_V            =	    0.03
Chi_CO2		    =	    0.001		! 1000 ppm CO2 go into melt (limited by fugacity)
Chi_extr	    =	    0.2		    ! 20% extrusive melt


add_crust       =       0 !1


! MantleRefVal	0                   ! Here only used for non-dimsensionalization, are re-set via profiles
rho             =       4500
rho_c		    =	    11000
Tm_ref          =       0
k               =       4
Cp		        =	    1250
Cp_c		    =	    700
g               =       9.81 	
alpha           =       2e-5		
kappa           =       1.0e-6
grain_size      =       0.001


! Ra_H0         0
Ra              =       0.0		    ! Rayleigh number at Tref/zref
eta_ref         =       1.0e+21
H0              =       1.0   		! 1.0 times C_U/C_Th/C_K heating effect in mantle
lambda          =       1.0   		! 1.0 times standard heat source decrease over time
H_from_surf     =       0
C_U             =       20.3        ! present-day values after McDonough and Sun, 1995 (is re-calculated to initial values in the code)
C_Th            =       79.5
C_K             =       240
CoreCooling     =       1		    ! Since isolated inner boundary
use_magn_H	    =	    0 
stop_magm_oc	=	    0 

! Chemical	0
B		        =	    1.0		    ! Buoyancy ratio for chemical diffusion, needed in momentum equation
drho		    =	    220		    ! density diff pyrolite to harzburgite; is divided by average mantle density and multiplied to B/(alpha*T)
Le		        =	    0		    ! Lewis number for chemical diffusion, if 0, then no double-diffusive solver is used
LeV		        =	    0
comp_init	    =	    0 		    ! +-1 = linear, +-2 = rho value; negative: add cylinder, positive: add random perturbation
comp_ampl	    =	    0		    ! Amplitude of composition perturbation
C_ref		    =   	1 		    ! reference composition (should correspond to reference density)


! Particles 	0
use_part	    =	    1 		    ! use particles instead of compositional field approach
part_n		    =	    0 		    ! total number of particles, ignored if part_n_cell>0
part_n_cell	    =	    10		    ! number of particles per cell
min_part	    =	    0 
max_part	    =	    0 
part_depth	    =	    1
restart_p	    =	    0
part_rk		    =	    4  
bnd_l		    =	    1 
bnd_r		    =	    1 


fieldsAll	=	1



! Numerics 	0
debug		    =	    0		    ! set between 1 and 5 to obtain detailed information
max_outer       =       50		    ! number of max outer iterations (coupled energy-momentum solver), used if e_solver>0
max_inner       =       3           ! number of max inner iterations (coupled pressure-velocity solver), used if m_solver>0
rout_solver     =       0 		    ! 0: Pardiso solver, 1: linBCG solver, -1: linBCG solver in thermal and Pardiso in stokes
itmax_bcg       =       10000
tol_bcg         =       1.0e-6
itol_bcg        =       1
relax           =       0.95		! relaxation factor for pressure correction (if m_solver not 1)
relax_v         =       0.05
noBouss		    =	    0		    ! if set to one then no Boussinesq is used in momentum solver
e_solver	    =	    3		    ! -1: no e-solver, 0: direct first-order explicit, 1: second-order iterative explicit, 2: first-oder iterative implicit, 3: second-order iterative implicit
CN_theta        =       1           ! if set inbetween [0,1] then e_solver is ignored and generalized Euler (including Crank-Nicolson) is used
UseUpwImpl      =       1           !-1
UseUpwExpl      =       1
m_solver        =       1 		    ! 1: coupled, 2: p and u-v-w, 3: p, u, v, w, -3: explicit, 0: no m-solver
c_solver	    =	    0
t_method	    =	    1		    ! 0=FDM, 1=FVM1 (+FDM for 2nd deriv.), 2=FVM2
s_method	    =	    1 		    ! 0=FDM, 2=FVM2
no_m_solver	    =	    0
convT	    	=	    1e-4        !7      ! criterion for convergence of outer iteration, used if e_solver>0 and number of outer iterations < max_outer
convV		    =	    1e-6 		! criterion for convergence of inner iteration, used if m_solver>0 and number of inner iterations < max_inner
conv		    =	    0		    ! stops the simulation if convergence of time steps is reached, not used if tmax>0 or nbiter is reached
test		    =	    0		    ! output of pressure, when used IDL keyword /test has to be used, as well
beta		    =	    1.0		    ! for flux limiter; 1: minmod, 2: superbee
average		    =	    3		    ! averaging scheme to be used for viscosity: 0=old, 1=harmonic, 2=arithmetic, 3=geometric
p_average	    =	    2		    ! averaging scheme to be used for particles: 1=harmonic, 2=arithmetic, 3=geometric
p_average2	    =	    2		    ! for density averaging; if 0 then set to p_average
p_penalty	    =	    1e-7		! this value shoud be 1.0e-7 and is divided by the maximal viscosity in the stokes equation
nmesures	    =	    0		    ! currently not used... should be included again for the cases when quasi-steady-state is reached to gain average values for the last X timesteps


EOF		        =	    1

